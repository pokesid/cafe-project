

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.PrintJob;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author saidu
 */
public class BillDetails extends javax.swing.JFrame {
static public String confirmpass4="";
public int sid1=0;
public int sid2=0;
public int sid3=0;
public int ga1;
public int gb1;
public int gc1;
public Double sum;
public String curtableyear="";
public String curtableyear2="";
public int summasid=0;
    /**
     * Creates new form BillDetails
     */

void caltotalsum()
{
    int j=0;
   try
    {
  
        sum=0.00;
    DefaultTableModel tm=(DefaultTableModel)jt1.getModel();
    j= tm.getRowCount();
   
        for(int i=0;i<=j;i++)
    {
        String s=tm.getValueAt(i, 3).toString();
        double d=Double.parseDouble(s);
       
        
        sum=sum+d;
        
    }
       
   
  
    
    //String e1="",e2="",e3="",e4="",e5="Total Cost=";
           // Object ob[]={e1,e2,e3,e4,e5,sum};
            //    tm.addRow(ob);
    
    }
    catch(Exception e)
    {
        
    }    
   sum=sum*100;
   long jl1=Math.round(sum);
 String pp1=jl1+"";
 sum=Double.parseDouble(pp1)/100;
   ltotal.setText("Total Amount is= "+sum);
   
   if(j==0)
   {
       ltotal.setText("");
   }
  
}
    public BillDetails(String passe) {
        initComponents();
        Dimension sz=Toolkit.getDefaultToolkit().getScreenSize();
        setSize(sz.width,sz.height);
        confirmpass4=passe;
        linfo.setVisible(false);
        JComboBox mList = new JComboBox();
    mList.setModel(new DefaultComboBoxModel());
jl.setIcon(new javax.swing.ImageIcon("C:\\bg.jpg"));
   try {

			
			FileInputStream fin = new FileInputStream("C:\\background.txt");
                        BufferedReader br=new BufferedReader(new InputStreamReader(fin));
String s1=br.readLine();
			

jl.setIcon(new javax.swing.ImageIcon(s1)); 

		} catch (IOException e) {
			
		} 
  
    DefaultComboBoxModel model = (DefaultComboBoxModel)cb1.getModel();
    
    
    model.removeAllElements();
                            for(int i=1;i<=31;i++)
                            {
                                 model.addElement(i);
                            }
                            String nameu="";
                            
         
           

         
          
     
                try
        {

            Class.forName("java.sql.DriverManager");
            Connection conn=DriverManager.getConnection("jdbc:mysql://localhost/cafe","root","ggwp");
            Statement stmt=conn.createStatement();
            String qry="Select * from companyname";
            ResultSet rs=stmt.executeQuery(qry);
            while(rs.next())
            {
                nameu=rs.getString("name");
               
            }
           ltitle.setText(nameu+"");

        }catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        linfo = new javax.swing.JLabel();
        c1 = new javax.swing.JCheckBox();
        cb3 = new javax.swing.JComboBox<>();
        cb1 = new javax.swing.JComboBox<>();
        cb2 = new javax.swing.JComboBox<>();
        l12 = new javax.swing.JLabel();
        l11 = new javax.swing.JLabel();
        l13 = new javax.swing.JLabel();
        b1 = new javax.swing.JButton();
        l01 = new javax.swing.JLabel();
        cb4 = new javax.swing.JComboBox<>();
        b2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        rb1 = new javax.swing.JRadioButton();
        rb2 = new javax.swing.JRadioButton();
        jButton3 = new javax.swing.JButton();
        c2 = new javax.swing.JCheckBox();
        c3 = new javax.swing.JCheckBox();
        jButton4 = new javax.swing.JButton();
        l21 = new javax.swing.JLabel();
        l31 = new javax.swing.JLabel();
        lsumma1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        be1 = new javax.swing.JButton();
        l99 = new javax.swing.JLabel();
        cb7 = new javax.swing.JComboBox<>();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jt1 = new javax.swing.JTable();
        lsumma = new javax.swing.JLabel();
        ltitle = new javax.swing.JLabel();
        ltotal = new javax.swing.JLabel();
        tno = new javax.swing.JTextField();
        rr = new javax.swing.JTextField();
        tablee = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        be2 = new javax.swing.JButton();
        jl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        linfo.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        linfo.setOpaque(true);
        getContentPane().add(linfo);
        linfo.setBounds(760, 110, 550, 600);

        c1.setForeground(new java.awt.Color(204, 204, 204));
        c1.setText("Date");
        c1.setEnabled(false);
        c1.setOpaque(false);
        c1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c1ActionPerformed(evt);
            }
        });
        getContentPane().add(c1);
        c1.setBounds(950, 240, 110, 30);

        cb3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030" }));
        cb3.setEnabled(false);
        cb3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb3ActionPerformed(evt);
            }
        });
        getContentPane().add(cb3);
        cb3.setBounds(1040, 240, 80, 30);

        cb1.setModel(new DefaultComboBoxModel());
        cb1.setEnabled(false);
        cb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb1ActionPerformed(evt);
            }
        });
        getContentPane().add(cb1);
        cb1.setBounds(1270, 240, 70, 30);

        cb2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        cb2.setEnabled(false);
        cb2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb2ActionPerformed(evt);
            }
        });
        getContentPane().add(cb2);
        cb2.setBounds(1160, 240, 70, 30);

        l12.setEnabled(false);
        getContentPane().add(l12);
        l12.setBounds(1190, 160, 100, 30);

        l11.setText("Choose Year            Choose Month      Choose Date");
        l11.setEnabled(false);
        getContentPane().add(l11);
        l11.setBounds(1040, 200, 320, 40);

        l13.setEnabled(false);
        getContentPane().add(l13);
        l13.setBounds(1290, 160, 100, 30);

        b1.setText("Search");
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });
        getContentPane().add(b1);
        b1.setBounds(730, 460, 90, 40);

        l01.setForeground(new java.awt.Color(51, 255, 0));
        l01.setText("Select Year:");
        getContentPane().add(l01);
        l01.setBounds(720, 190, 100, 50);

        cb4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030" }));
        getContentPane().add(cb4);
        cb4.setBounds(720, 230, 100, 40);

        b2.setText("Search");
        b2.setEnabled(false);
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });
        getContentPane().add(b2);
        b2.setBounds(1090, 540, 130, 50);

        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 10));
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(920, 50, 20, 700);

        jLabel7.setFont(new java.awt.Font("Tekton Pro Ext", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 255, 0));
        jLabel7.setText("Filter");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(880, -10, 230, 70);

        buttonGroup1.add(rb1);
        rb1.setFont(new java.awt.Font("Tekton Pro Ext", 1, 36)); // NOI18N
        rb1.setForeground(new java.awt.Color(51, 255, 0));
        rb1.setSelected(true);
        rb1.setText("Normal Filter");
        rb1.setOpaque(false);
        rb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb1ActionPerformed(evt);
            }
        });
        getContentPane().add(rb1);
        rb1.setBounds(640, 90, 290, 40);

        buttonGroup1.add(rb2);
        rb2.setFont(new java.awt.Font("Tekton Pro Ext", 1, 36)); // NOI18N
        rb2.setForeground(new java.awt.Color(51, 255, 0));
        rb2.setText("Advanced Filter");
        rb2.setOpaque(false);
        rb2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb2ActionPerformed(evt);
            }
        });
        getContentPane().add(rb2);
        rb2.setBounds(960, 90, 350, 40);

        jButton3.setText("<-- Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(20, 700, 110, 40);

        c2.setForeground(new java.awt.Color(204, 204, 204));
        c2.setText("Table No");
        c2.setEnabled(false);
        c2.setOpaque(false);
        c2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c2ActionPerformed(evt);
            }
        });
        getContentPane().add(c2);
        c2.setBounds(950, 340, 100, 30);

        c3.setForeground(new java.awt.Color(204, 204, 204));
        c3.setText("Waiter Name");
        c3.setEnabled(false);
        c3.setOpaque(false);
        c3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c3ActionPerformed(evt);
            }
        });
        getContentPane().add(c3);
        c3.setBounds(950, 460, 110, 30);

        jButton4.setText("Print");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(250, 700, 140, 50);

        l21.setText("Enter Table No");
        l21.setEnabled(false);
        getContentPane().add(l21);
        l21.setBounds(1090, 300, 110, 30);

        l31.setText("Enter Waiter Name");
        l31.setEnabled(false);
        getContentPane().add(l31);
        l31.setBounds(1100, 430, 130, 30);
        getContentPane().add(lsumma1);
        lsumma1.setBounds(860, 560, 220, 110);

        jButton1.setText("Show Todays Record");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(230, 640, 190, 40);

        be1.setText("<-");
        be1.setEnabled(false);
        be1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                be1ActionPerformed(evt);
            }
        });
        getContentPane().add(be1);
        be1.setBounds(40, 640, 90, 40);

        l99.setText("Select month");
        getContentPane().add(l99);
        l99.setBounds(720, 340, 80, 30);

        cb7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        cb7.setEnabled(false);
        cb7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb7ActionPerformed(evt);
            }
        });
        getContentPane().add(cb7);
        cb7.setBounds(720, 370, 110, 30);

        jCheckBox1.setForeground(new java.awt.Color(51, 255, 0));
        jCheckBox1.setText("Month");
        jCheckBox1.setOpaque(false);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox1);
        jCheckBox1.setBounds(640, 370, 93, 25);

        jPanel1.setLayout(null);

        jt1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "date", "Day", "Time", "Amount", "Table Number", "Waiter Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jt1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jt1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jt1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 80, 590, 500);
        jPanel1.add(lsumma);
        lsumma.setBounds(10, 60, 590, 20);

        ltitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ltitle.setForeground(new java.awt.Color(204, 0, 0));
        jPanel1.add(ltitle);
        ltitle.setBounds(180, 10, 300, 30);

        ltotal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel1.add(ltotal);
        ltotal.setBounds(290, 586, 310, 30);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 10, 610, 620);

        tno.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        tno.setEnabled(false);
        tno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tnoKeyReleased(evt);
            }
        });
        getContentPane().add(tno);
        tno.setBounds(1120, 340, 50, 30);

        rr.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        rr.setEnabled(false);
        rr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rrKeyReleased(evt);
            }
        });
        getContentPane().add(rr);
        rr.setBounds(1090, 460, 150, 30);

        tablee.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        tablee.setText("Table");
        tablee.setEnabled(false);
        getContentPane().add(tablee);
        tablee.setBounds(1070, 340, 50, 30);

        jButton2.setText("info");
        jButton2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jButton2MouseMoved(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(1310, 710, 80, 40);

        be2.setText("->");
        be2.setEnabled(false);
        be2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                be2ActionPerformed(evt);
            }
        });
        getContentPane().add(be2);
        be2.setBounds(470, 640, 90, 40);

        jl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bg8.jpg"))); // NOI18N
        jl.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jlMouseMoved(evt);
            }
        });
        getContentPane().add(jl);
        jl.setBounds(-6, -6, 1400, 760);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void c1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c1ActionPerformed
if(c1.isSelected())
{
cb1.setEnabled(true);
cb2.setEnabled(true);
cb3.setEnabled(true);
l11.setEnabled(true);
l12.setEnabled(true);
l13.setEnabled(true);
sid1=1;
 l11.setForeground(new java.awt.Color(51, 255, 0));

}
else
{
    cb1.setEnabled(false);
cb2.setEnabled(false);
cb3.setEnabled(false);
l11.setEnabled(false);
l12.setEnabled(false);
l13.setEnabled(false);
sid1=0;
}
int a=sid1+sid2+sid3;
if(a>0)
{
    b2.setEnabled(true);
}
else
{
    b2.setEnabled(false);
}

// TODO add your handling code here:
    }//GEN-LAST:event_c1ActionPerformed

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
if(jCheckBox1.isSelected())
{
    try
        {
            String date;
            String month;
            String year;
            String finaldate;
            String time;
            String day;
            String cost;
            String tableno;
            String waiter_name;
            
            String selected="database"+cb4.getSelectedItem().toString();
            curtableyear=cb4.getSelectedItem().toString();
            int a=Integer.parseInt(cb7.getSelectedItem().toString());
           
            
            
DefaultTableModel tm=(DefaultTableModel)jt1.getModel();
        tm.setRowCount(0);
            Class.forName("java.sql.DriverManager");
            Connection conn=DriverManager.getConnection("jdbc:mysql://localhost/cafe","root","ggwp");
            Statement stmt=conn.createStatement();
            String qry="Select * from "+selected+" where month="+a;
            ResultSet rs=stmt.executeQuery(qry);
            String mnthuu="";
            switch(a)
            {
                case 1:
                    mnthuu="January";
                    break;
                     case 2:
                    mnthuu="February";
                    break;
                     case 3:
                    mnthuu="March";
                    break;
                     case 4:
                    mnthuu="April";
                    break;
                     case 5:
                    mnthuu="May";
                    break; case 6:
                    mnthuu="June";
                    break; case 7:
                    mnthuu="July";
                    break; case 8:
                    mnthuu="August";
                    break; case 9:
                    mnthuu="September";
                    break;
                     case 10:
                    mnthuu="October";
                    break;
                     case 11:
                    mnthuu="November";
                    break;
                     case 12:
                    mnthuu="December";
                    break;
                    
                
            }
             lsumma.setText("Showing Record for "+mnthuu+"  "+(cb4.getSelectedItem().toString()));
            while(rs.next())
            {
                date=rs.getString("date");
                month=rs.getString("month");
                year=rs.getString("year");
                day=rs.getString("day");
                cost=rs.getString("cost");
                time=rs.getString("time");
                tableno=rs.getString("table_no");
                waiter_name=rs.getString("waiter_name");
                
                finaldate=date+"-"+month+"-"+year;
                
                Object ob[]={finaldate,day,time,cost,tableno,waiter_name};
                tm.addRow(ob);
               

              
            }

        }catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }
    
    
}
else
{
    try
        {
            String date;
            String month;
            String year;
            String finaldate;
            String time;
            String day;
            String cost;
            String tableno;
            String waiter_name;
            String selected="database"+cb4.getSelectedItem().toString();
           
            curtableyear=cb4.getSelectedItem().toString();
            
DefaultTableModel tm=(DefaultTableModel)jt1.getModel();
        tm.setRowCount(0);
            Class.forName("java.sql.DriverManager");
            Connection conn=DriverManager.getConnection("jdbc:mysql://localhost/cafe","root","ggwp");
            Statement stmt=conn.createStatement();
            String qry="Select * from "+selected;
              lsumma.setText("Showing Record for "+(cb4.getSelectedItem().toString()));
            ResultSet rs=stmt.executeQuery(qry);
            while(rs.next())
            {
                date=rs.getString("date");
                month=rs.getString("month");
                year=rs.getString("year");
                day=rs.getString("day");
                cost=rs.getString("cost");
                time=rs.getString("time");
                tableno=rs.getString("table_no");
                waiter_name=rs.getString("waiter_name");
                
                finaldate=date+"-"+month+"-"+year;
                
                Object ob[]={finaldate,day,time,cost,tableno,waiter_name};
                tm.addRow(ob);
               
//caltotalsum();
              
            }

        }catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }
    
}
caltotalsum();// TODO add your handling code here:
    }//GEN-LAST:event_b1ActionPerformed

    private void cb2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb2ActionPerformed
int a=Integer.parseInt(cb2.getSelectedItem().toString());
int b=Integer.parseInt(cb3.getSelectedItem().toString());
JComboBox mList = new JComboBox();
    mList.setModel(new DefaultComboBoxModel());

  
    DefaultComboBoxModel model = (DefaultComboBoxModel)cb1.getModel();
        int ggwp=cb1.getSelectedIndex();

    
switch(a)
{
    case 1:
    case 3:
        case 5:
            case 7:
                case 8:
                    case 10:
                        case 12:
                             model.removeAllElements();
                            for(int i=1;i<=31;i++)
                            {
                                 model.addElement(i);
                            }
                            break;
                            
    case 4:
        case 6:
            case 9:
                case 11:
                    
                             model.removeAllElements();
                            for(int i=1;i<=30;i++)
                            {
                                 model.addElement(i);
                            }
                            break;
                                    case 2:
                                      
                            if((b%4)==0)
                            {
                                  model.removeAllElements();
                            for(int i=1;i<=29;i++)
                            {
                                 model.addElement(i);
                            }
                            }
                            else
                            {
                                   model.removeAllElements();
                            for(int i=1;i<=28;i++)
                            {
                                 model.addElement(i);
                            }
                            
                            
                            }
                break;
                                    default:
                                        JOptionPane.showMessageDialog(this,"Invalid Response");
                            
}
try
{
cb1.setSelectedIndex(ggwp);
}
catch(Exception ex)
{
    cb1.setSelectedIndex(0);
}

        // TODO add your handling code here:
    }//GEN-LAST:event_cb2ActionPerformed

    private void cb3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb3ActionPerformed

        int a=Integer.parseInt(cb2.getSelectedItem().toString());
int b=Integer.parseInt(cb3.getSelectedItem().toString());
JComboBox mList = new JComboBox();
    mList.setModel(new DefaultComboBoxModel());

  int ggwp=cb1.getSelectedIndex();
    DefaultComboBoxModel model = (DefaultComboBoxModel)cb1.getModel();
 
switch(a)
{
   
                            
  
                                    case 2:
                                      
                            if((b%4)==0)
                            {
                                  model.removeAllElements();
                            for(int i=1;i<=29;i++)
                            {
                                 model.addElement(i);
                            }
                            }
                            else
                            {
                                   model.removeAllElements();
                            for(int i=1;i<=28;i++)
                            {
                                 model.addElement(i);
                            }
                            
                            
                            }
                break;
                                    default:
                                        
                            
}

 
 try
{
cb1.setSelectedIndex(ggwp);
}
catch(Exception ex)
{
    cb1.setSelectedIndex(0);
}

        // TODO add your handling code here:
    }//GEN-LAST:event_cb3ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        manager ll=new manager(confirmpass4);
        ll.setVisible(true);
        setVisible(false);

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed

        int ggwp=0;
        if((c1.isSelected()==true)&&(c2.isSelected()==false)&&(c3.isSelected()==false))
{    
    ggwp=1;
       
}
        if((c2.isSelected()==true)&&c1.isSelected()==false&&c3.isSelected()==false)
        {
            ggwp=2;
        }
        if(c3.isSelected()==true&&c2.isSelected()==false&&c1.isSelected()==false)
        {
            ggwp=3;
        }
        
          if(c1.isSelected()==true&&c2.isSelected()==true&&c3.isSelected()==false)
{    
    ggwp=4;
       
}
            if((c1.isSelected()==true)&&(c2.isSelected()==false)&&(c3.isSelected()==true))
{    
    ggwp=5;
       
}
               if(c1.isSelected()==false&&c2.isSelected()==true&&c3.isSelected()==true)
{    
    ggwp=6;
       
}
               
               if(c1.isSelected()==true&&c2.isSelected()==true&&c3.isSelected()==true)
{    
    ggwp=7;
       
}
       
        // if first cb is selected
        if(ggwp==1)
        {
            try
        {
            String date;
            String month;
            String year;
            String finaldate;
            String time;
            String day;
            String cost;
            String tableno;
            String waiter_name;
            
            
            int a=Integer.parseInt(cb1.getSelectedItem().toString());
    int b=Integer.parseInt(cb2.getSelectedItem().toString());
    int c=Integer.parseInt(cb3.getSelectedItem().toString());
            curtableyear=cb3.getSelectedItem().toString();
            
DefaultTableModel tm=(DefaultTableModel)jt1.getModel();
        tm.setRowCount(0);
            Class.forName("java.sql.DriverManager");
            Connection conn=DriverManager.getConnection("jdbc:mysql://localhost/cafe","root","ggwp");
            Statement stmt=conn.createStatement();
            String qry="Select * from database"+c+" where date="+a+" && month="+b;
            ResultSet rs=stmt.executeQuery(qry);
              lsumma.setText("Showing Record for : "+a+"/"+b+"/"+c);
            while(rs.next())
            {
                date=rs.getString("date");
                month=rs.getString("month");
                year=rs.getString("year");
                day=rs.getString("day");
                cost=rs.getString("cost");
                time=rs.getString("time");
                tableno=rs.getString("table_no");
                waiter_name=rs.getString("waiter_name");
                
                finaldate=date+"-"+month+"-"+year;
                
                Object ob[]={finaldate,day,time,cost,tableno,waiter_name};
                tm.addRow(ob);
               

              
            }

        }catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }       
        }
        
        
        
        //for second cb
        
        if(ggwp==2)
        {
            try
        {
            String date;
            String month;
            String year;
            String finaldate;
            String time;
            String day;
            String cost;
            String tableno;
            String waiter_name;
            
            summasid=1;
            
    String c="table"+tno.getText();
            
            
DefaultTableModel tm=(DefaultTableModel)jt1.getModel();
        tm.setRowCount(0);
            Class.forName("java.sql.DriverManager");
            Connection conn=DriverManager.getConnection("jdbc:mysql://localhost/cafe","root","ggwp");
            Statement stmt=conn.createStatement();
            for(int i=2017;i<=2031;i++)
            {
            String qry="Select * from database"+i+" where table_no='"+c+"'";
            ResultSet rs=stmt.executeQuery(qry);
            lsumma.setText("Showing Record for "+c);
            while(rs.next())
            {
                date=rs.getString("date");
                month=rs.getString("month");
                year=rs.getString("year");
                day=rs.getString("day");
                cost=rs.getString("cost");
                time=rs.getString("time");
                tableno=rs.getString("table_no");
                waiter_name=rs.getString("waiter_name");
                
                finaldate=date+"-"+month+"-"+year;
                
                Object ob[]={finaldate,day,time,cost,tableno,waiter_name};
                tm.addRow(ob);
            

              
            }
            }

        }catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }       
        }
        
        //For cb3
        
        if(ggwp==3)
        {
            try
        {
            String date;
            String month;
            String year;
            String finaldate;
            String time;
            String day;
            String cost;
            String tableno;
            String waiter_name;
            
              summasid=1;
            
    String c=rr.getText();
            
            
DefaultTableModel tm=(DefaultTableModel)jt1.getModel();
        tm.setRowCount(0);
            Class.forName("java.sql.DriverManager");
            Connection conn=DriverManager.getConnection("jdbc:mysql://localhost/cafe","root","ggwp");
            Statement stmt=conn.createStatement();
            for(int i=2017;i<=2019;i++)
            {
            String qry="Select * from database"+i+" where waiter_name='"+c+"'";
            ResultSet rs=stmt.executeQuery(qry);
            lsumma.setText("Showing Record for waiter : "+c);
            while(rs.next())
            {
                date=rs.getString("date");
                month=rs.getString("month");
                year=rs.getString("year");
                day=rs.getString("day");
                cost=rs.getString("cost");
                time=rs.getString("time");
                tableno=rs.getString("table_no");
                waiter_name=rs.getString("waiter_name");
                
                finaldate=date+"-"+month+"-"+year;
                
                Object ob[]={finaldate,day,time,cost,tableno,waiter_name};
                tm.addRow(ob);
            

              
            }
            }

        }catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }   
            
        }
        
        // if cb 1 and 2 are selected
        
        
        if(ggwp==4)
        {
            try
        {
            String date;
            String month;
            String year;
            String finaldate;
            String time;
            String day;
            String cost;
            String tableno;
            String waiter_name;
            
             int a=Integer.parseInt(cb1.getSelectedItem().toString());
    int b=Integer.parseInt(cb2.getSelectedItem().toString());
    int c=Integer.parseInt(cb3.getSelectedItem().toString());
             curtableyear=cb3.getSelectedItem().toString();
    String d="table"+tno.getText();
    
            
            
DefaultTableModel tm=(DefaultTableModel)jt1.getModel();
        tm.setRowCount(0);
            Class.forName("java.sql.DriverManager");
            Connection conn=DriverManager.getConnection("jdbc:mysql://localhost/cafe","root","ggwp");
            Statement stmt=conn.createStatement();
            
            String qry="Select * from database"+c+" where table_no='"+d+"' && date="+a+" && month="+b;
            ResultSet rs=stmt.executeQuery(qry);
            lsumma.setText("Showing Record for : "+a+"/"+b+"/"+c+" and "+ d);
            while(rs.next())
            {
                date=rs.getString("date");
                month=rs.getString("month");
                year=rs.getString("year");
                day=rs.getString("day");
                cost=rs.getString("cost");
                time=rs.getString("time");
                tableno=rs.getString("table_no");
                waiter_name=rs.getString("waiter_name");
                
                finaldate=date+"-"+month+"-"+year;
                
                Object ob[]={finaldate,day,time,cost,tableno,waiter_name};
                tm.addRow(ob);
            

              
            }
            

        }catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }   
            
        }
        
        
        // if cb 1 and 3 are selected
        
        
        if(ggwp==5)
        {
            try
        {
            String date;
            String month;
            String year;
            String finaldate;
            String time;
            String day;
            String cost;
            String tableno;
            String waiter_name;
            
             int a=Integer.parseInt(cb1.getSelectedItem().toString());
    int b=Integer.parseInt(cb2.getSelectedItem().toString());
    int c=Integer.parseInt(cb3.getSelectedItem().toString());
            
    String d=rr.getText();
     curtableyear=cb3.getSelectedItem().toString();
            
            
DefaultTableModel tm=(DefaultTableModel)jt1.getModel();
        tm.setRowCount(0);
            Class.forName("java.sql.DriverManager");
            Connection conn=DriverManager.getConnection("jdbc:mysql://localhost/cafe","root","ggwp");
            Statement stmt=conn.createStatement();
            
            String qry="Select * from database"+c+" where waiter_name='"+d+"' && date="+a+" && month="+b;
            ResultSet rs=stmt.executeQuery(qry);
            lsumma.setText("Showing Record for : "+a+"/"+b+"/"+c+" and waiter:"+d);
            while(rs.next())
            {
                date=rs.getString("date");
                month=rs.getString("month");
                year=rs.getString("year");
                day=rs.getString("day");
                cost=rs.getString("cost");
                time=rs.getString("time");
                tableno=rs.getString("table_no");
                waiter_name=rs.getString("waiter_name");
                
                finaldate=date+"-"+month+"-"+year;
                
                Object ob[]={finaldate,day,time,cost,tableno,waiter_name};
                tm.addRow(ob);
            

              
            }
            

        }catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }   
            
        }
        
        //if cb 2 and 3 are selected
        
        if(ggwp==6)
        {
            try
        {
            String date;
            String month;
            String year;
            String finaldate;
            String time;
            String day;
            String cost;
            String tableno;
            String waiter_name;
            
              summasid=1;
            
    String b="table"+tno.getText();
     String c=rr.getText();
            
            
DefaultTableModel tm=(DefaultTableModel)jt1.getModel();
        tm.setRowCount(0);
            Class.forName("java.sql.DriverManager");
            Connection conn=DriverManager.getConnection("jdbc:mysql://localhost/cafe","root","ggwp");
            Statement stmt=conn.createStatement();
            for(int i=2017;i<=2019;i++)
            {
            String qry="Select * from database"+i+" where table_no='"+b+"' && waiter_name='"+c+"'";
            ResultSet rs=stmt.executeQuery(qry);
            lsumma.setText("Showing Record for "+b+" and waiter: "+c);
            while(rs.next())
            {
                date=rs.getString("date");
                month=rs.getString("month");
                year=rs.getString("year");
                day=rs.getString("day");
                cost=rs.getString("cost");
                time=rs.getString("time");
                tableno=rs.getString("table_no");
                waiter_name=rs.getString("waiter_name");
                
                finaldate=date+"-"+month+"-"+year;
                
                Object ob[]={finaldate,day,time,cost,tableno,waiter_name};
                tm.addRow(ob);
            

              
            }
            }

        }catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }       
        }
        
        //for all 3 cb are selected
        
        if(ggwp==7)
        {
            try
        {
            String date;
            String month;
            String year;
            String finaldate;
            String time;
            String day;
            String cost;
            String tableno;
            String waiter_name;
            
            
            int a=Integer.parseInt(cb1.getSelectedItem().toString());
    int b=Integer.parseInt(cb2.getSelectedItem().toString());
    int c=Integer.parseInt(cb3.getSelectedItem().toString());
    String d="table"+tno.getText();
    String e=rr.getText();
            
             curtableyear=cb3.getSelectedItem().toString();
DefaultTableModel tm=(DefaultTableModel)jt1.getModel();
        tm.setRowCount(0);
            Class.forName("java.sql.DriverManager");
            Connection conn=DriverManager.getConnection("jdbc:mysql://localhost/cafe","root","ggwp");
            Statement stmt=conn.createStatement();
            String qry="Select * from database"+c+" where date="+a+" && month="+b+" && table_no='"+d+"' && waiter_name='"+e+"'";
            ResultSet rs=stmt.executeQuery(qry);
            lsumma.setText("Showing Record for : "+a+"/"+b+"/"+c+" table number: "+d+" waiter: "+e);
            while(rs.next())
            {
                date=rs.getString("date");
                month=rs.getString("month");
                year=rs.getString("year");
                day=rs.getString("day");
                cost=rs.getString("cost");
                time=rs.getString("time");
                tableno=rs.getString("table_no");
                waiter_name=rs.getString("waiter_name");
                
                finaldate=date+"-"+month+"-"+year;
                
                Object ob[]={finaldate,day,time,cost,tableno,waiter_name};
                tm.addRow(ob);
               

              
            }

        }catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }       
        }
        
        
        
       caltotalsum(); 
        
    // TODO add your handling code here:
    }//GEN-LAST:event_b2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
try
{
    
   // boolean pd=jt1.print();
   Toolkit tkp=jPanel1.getToolkit();
   PrintJob pjp=tkp.getPrintJob(this,null,null);
   Graphics g=pjp.getGraphics();
   jPanel1.print(g);
   g.dispose();
   pjp.end();
   
}
catch(Exception ex)
{
    
}
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void rb2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb2ActionPerformed
if(rb2.isSelected())
{
c1.setEnabled(true);
c2.setEnabled(true);
c3.setEnabled(true);
c1.setForeground(new java.awt.Color(51, 255, 0));
c2.setForeground(new java.awt.Color(51, 255, 0));
c3.setForeground(new java.awt.Color(51, 255, 0));
  b1.setEnabled(false);
cb4.setEnabled(false);
l01.setEnabled(false);
    cb7.setEnabled(false);
l99.setEnabled(false);
jCheckBox1.setSelected(false);
jCheckBox1.setEnabled(false);
jCheckBox1.setForeground(new java.awt.Color(204,204,204));

}
// TODO add your handling code here:
    }//GEN-LAST:event_rb2ActionPerformed

    private void rb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb1ActionPerformed
if(rb1.isSelected())
{jCheckBox1.setEnabled(true);
    b1.setEnabled(true);
cb4.setEnabled(true);
l01.setEnabled(true);
c1.setSelected(false);
c2.setSelected(false);
c3.setSelected(false);
c1.setEnabled(false);
c2.setEnabled(false);
c3.setEnabled(false);
cb1.setEnabled(false);
cb2.setEnabled(false);
cb3.setEnabled(false);
tno.setEnabled(false);
rr.setEnabled(false);
b2.setEnabled(false);
l11.setEnabled(false);
l12.setEnabled(false);
l13.setEnabled(false);
l21.setEnabled(false);
l31.setEnabled(false);
tablee.setEnabled(false);
l01.setEnabled(true);
c1.setForeground(new java.awt.Color(204, 204, 204));
c2.setForeground(new java.awt.Color(204, 204, 204));
c3.setForeground(new java.awt.Color(204, 204, 204));
jCheckBox1.setForeground(new java.awt.Color(51, 255, 0));

}
        
                // TODO add your handling code here:
    }//GEN-LAST:event_rb1ActionPerformed

    private void c2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c2ActionPerformed
if(c2.isSelected())
{
tno.setEnabled(true);
tablee.setEnabled(true);
tablee.setForeground(new java.awt.Color(51, 255, 0));
l21.setForeground(new java.awt.Color(51, 255, 0));
l21.setEnabled(true);
sid2=1;
}
else
{
tno.setEnabled(false);

tablee.setEnabled(false);
l21.setEnabled(false);
sid2=0;
}       
int a=sid1+sid2+sid3;
if(a>0)
{
    b2.setEnabled(true);
}
else
{
    b2.setEnabled(false);
}// TODO add your handling code here:
    }//GEN-LAST:event_c2ActionPerformed

    private void c3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c3ActionPerformed
if(c3.isSelected())
{
rr.setEnabled(true);
sid3=1;
l31.setEnabled(true);
l31.setForeground(new java.awt.Color(51, 255, 0));
}
else
{
rr.setEnabled(false);
sid3=0;
l31.setEnabled(false);  
}         
int a=sid1+sid2+sid3;
if(a>0)
{
    b2.setEnabled(true);
}
else
{
    b2.setEnabled(false);
}// TODO add your handling code here:
    }//GEN-LAST:event_c3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        
        try
        {
            be1.setEnabled(true);
            be2.setEnabled(false);
            String date;
            String month;
            String year;
            String finaldate;
            String time;
            String day;
            String cost;
            String tableno;
            String waiter_name;
            
    long t;
t=System.currentTimeMillis();
        SimpleDateFormat sf=new SimpleDateFormat("dd");
        SimpleDateFormat sf2=new SimpleDateFormat("MM");
        SimpleDateFormat sf3=new SimpleDateFormat("yyyy");
        
        

String a=sf.format((t));
String b=sf2.format((t));
String c=sf3.format((t));
curtableyear=c;


int a1=Integer.parseInt(a);
int b1=Integer.parseInt(b);
int c1=Integer.parseInt(c);
ga1=a1;
gb1=b1;
gc1=c1;       
            lsumma.setText("Showing Record for : "+a1+"/"+b1+"/"+c1);
            
DefaultTableModel tm=(DefaultTableModel)jt1.getModel();
        tm.setRowCount(0);
            Class.forName("java.sql.DriverManager");
            Connection conn=DriverManager.getConnection("jdbc:mysql://localhost/cafe","root","ggwp");
            Statement stmt=conn.createStatement();
            String qry="Select * from database"+c1+" where date="+a1+" && month="+b1;
            ResultSet rs=stmt.executeQuery(qry);
            while(rs.next())
            {
                date=rs.getString("date");
                month=rs.getString("month");
                year=rs.getString("year");
                day=rs.getString("day");
                cost=rs.getString("cost");
                time=rs.getString("time");
                tableno=rs.getString("table_no");
                waiter_name=rs.getString("waiter_name");
               
                
                finaldate=date+"-"+month+"-"+year;
                
                Object ob[]={finaldate,day,time,cost,tableno,waiter_name};
                tm.addRow(ob);
               

              
            }
            String e1="",e2="",e3="",e4="",e5="Total Cost=";
           // Object ob[]={e1,e2,e3,e4,e5,sum};
            //    tm.addRow(ob);
           

        }catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }          // TODO add your handling code here:

 caltotalsum();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb1ActionPerformed

    private void be1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_be1ActionPerformed
 
        try
        {
be2.setEnabled(true);
            String date;
            String month;
            String year;
            String finaldate;
            String time;
            String day;
            String cost;
            String tableno;
            String waiter_name;
            
    long t;
t=System.currentTimeMillis();
        SimpleDateFormat sf=new SimpleDateFormat("dd");
        SimpleDateFormat sf2=new SimpleDateFormat("MM");
        SimpleDateFormat sf3=new SimpleDateFormat("yyyy");
        
        

String a=sf.format((t));
String b=sf2.format((t));
String c=sf3.format((t));
curtableyear=c;


int a1=Integer.parseInt(a);
int b1=Integer.parseInt(b);
int c1=Integer.parseInt(c);


if((ga1-1)==0)
{
    switch(gb1)
    {
        case 2:
        case 4:
        case 6:
        case 9:
        case 11:
            ga1=31;
            break;
            
        case 5:
        case 7:
        case 10:
        case 12:
            ga1=30;
            break;
        case 1:
            ga1=31;
            gc1=gc1-1;
            break;
        case 3:
            if((gc1%4)==0)
            {
                ga1=29;
            }
            else
            {
                ga1=28;
            }
            break;
        default:
            
            
            
            
            
        
        
    }
}
else
{
    ga1--;
}


lsumma.setText("Showing Record for : "+ga1+"/"+gb1+"/"+gc1);       
            
            
DefaultTableModel tm=(DefaultTableModel)jt1.getModel();
        tm.setRowCount(0);
            Class.forName("java.sql.DriverManager");
            Connection conn=DriverManager.getConnection("jdbc:mysql://localhost/cafe","root","ggwp");
            Statement stmt=conn.createStatement();
            String qry="Select * from database"+gc1+" where date="+ga1+" && month="+gb1;
            ResultSet rs=stmt.executeQuery(qry);
            while(rs.next())
            {
                date=rs.getString("date");
                month=rs.getString("month");
                year=rs.getString("year");
                day=rs.getString("day");
                cost=rs.getString("cost");
                time=rs.getString("time");
                tableno=rs.getString("table_no");
                waiter_name=rs.getString("waiter_name");
                
                finaldate=date+"-"+month+"-"+year;
                
                Object ob[]={finaldate,day,time,cost,tableno,waiter_name};
                tm.addRow(ob);
               

              
            }

        }catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }          // TODO add your handling code here:

caltotalsum();
        // TODO add your handling code here:
    }//GEN-LAST:event_be1ActionPerformed

    private void cb7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb7ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
if(jCheckBox1.isSelected())
{
cb7.setEnabled(true);
l99.setEnabled(true);
l99.setForeground(new java.awt.Color(51, 255, 0));
}
else
{
    cb7.setEnabled(false);
l99.setEnabled(false);
}

// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jt1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jt1KeyReleased
if(evt.getKeyCode() == KeyEvent.VK_DELETE) {
    int bbb=JOptionPane.showOptionDialog(null, "Are You Sure You want to Delete this Record?","Confirm Message",JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, null,null,null);
                  if(bbb==JOptionPane.YES_OPTION)
                  {
                       DefaultTableModel tm=(DefaultTableModel)jt1.getModel();
       int a= jt1.getSelectedRow();
        String s1=tm.getValueAt(a,1).toString();
        String s2=tm.getValueAt(a,2).toString();
        String s3=tm.getValueAt(a,4).toString();
        
        curtableyear2="database"+curtableyear;
          if(summasid==0)
          {
                 try
                 {
            Class.forName("java.sql.DriverManager");
            Connection conn=DriverManager.getConnection("jdbc:mysql://localhost/cafe","root","ggwp");
            Statement stmt=conn.createStatement();
            
            String qry="delete from "+curtableyear2+" where day='"+s1+"' && time='"+s2+"' && table_no='"+s3+"'";
            stmt.executeUpdate(qry);
            
        
                  }
                 catch(Exception ex)
                  {
            JOptionPane.showMessageDialog(this,ex.getMessage());
            
                  }
               
          }
          else
          {
              
              
                try
                 {
            Class.forName("java.sql.DriverManager");
            Connection conn=DriverManager.getConnection("jdbc:mysql://localhost/cafe","root","ggwp");
            Statement stmt=conn.createStatement();
            
            for(int ii=2017;ii<=2031;ii++)
            {
            curtableyear2="database"+ii;
            String qry="delete from "+curtableyear2+" where day='"+s1+"' && time='"+s2+"' && table_no='"+s3+"'";
            stmt.executeUpdate(qry);
            }
        
                  }
                 catch(Exception ex)
                  {
            JOptionPane.showMessageDialog(this,ex.getMessage());
            
                  }
              
              
          }
              
              
         tm.removeRow(a);
         
         
   }
}
else
{ 
   
}

caltotalsum();
// TODO add your handling code here:
    }//GEN-LAST:event_jt1KeyReleased

    private void jButton2MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseMoved
linfo.setVisible(true);
linfo.setText("The informationn give it \n here");  
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2MouseMoved

    private void jlMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlMouseMoved
linfo.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_jlMouseMoved

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void be2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_be2ActionPerformed

        try
        {

            String date;
            String month;
            String year;
            String finaldate;
            String time;
            String day;
            String cost;
            String tableno;
            String waiter_name;

            long t;
            t=System.currentTimeMillis();
            SimpleDateFormat sf=new SimpleDateFormat("dd");
            SimpleDateFormat sf2=new SimpleDateFormat("MM");
            SimpleDateFormat sf3=new SimpleDateFormat("yyyy");

            String a=sf.format((t));
            String b=sf2.format((t));
            String c=sf3.format((t));

            int a1=Integer.parseInt(a);
            int b1=Integer.parseInt(b);
            int c1=Integer.parseInt(c);

            switch(gb1)
            {
                case 1:
                case 3:
                case 5:
                case 7:
                case 8:
                case 10:
                
                if(ga1==31)
                {
                    ga1=1;
                    gb1++;
                }
                else
                {
                    ga1++;
                }
                break;

                case 4:
                case 6:
                case 9:
                case 11:
                if(ga1==30)
                {
                    ga1=1;
                    gb1++;
                }
                else
                {
                    ga1++;
                }
                break;
                case 2:

                if((gc1%4)==0)
                {
                    if(ga1==29)
                    {
                        ga1=1;
                        gb1++;
                    }
                    else
                    {
                        ga1++;
                    }
                }
                else
                {
                    if(ga1==28)
                    {
                        ga1=1;
                        gb1++;
                    }
                    else
                    {
                        ga1++;
                    }
                }
                break;
                case 12:
                if(ga1==31)
                {
                    ga1=1;
                    gb1=1;
                    gc1++;
                }
                else
                {
                    ga1++;
                }
                
                default:

            }

            if((a1==ga1)&&(b1==gb1)&&(c1==gc1))
            {
                be2.setEnabled(false);
            }

            lsumma.setText("Showing Record for : "+ga1+"/"+gb1+"/"+gc1);

            DefaultTableModel tm=(DefaultTableModel)jt1.getModel();
            tm.setRowCount(0);
            Class.forName("java.sql.DriverManager");
            Connection conn=DriverManager.getConnection("jdbc:mysql://localhost/cafe","root","ggwp");
            Statement stmt=conn.createStatement();
            String qry="Select * from database"+gc1+" where date="+ga1+" && month="+gb1;
            ResultSet rs=stmt.executeQuery(qry);
            while(rs.next())
            {
                date=rs.getString("date");
                month=rs.getString("month");
                year=rs.getString("year");
                day=rs.getString("day");
                cost=rs.getString("cost");
                time=rs.getString("time");
                tableno=rs.getString("table_no");
                waiter_name=rs.getString("waiter_name");

                finaldate=date+"-"+month+"-"+year;

                Object ob[]={finaldate,day,time,cost,tableno,waiter_name};
                tm.addRow(ob);

            }

        }catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }          // TODO add your handling code here:
caltotalsum();
        // TODO add your handling code here:
    }//GEN-LAST:event_be2ActionPerformed

    private void tnoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tnoKeyReleased
    
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
      b2.doClick();
     
   }

        // TODO add your handling code here:
    }//GEN-LAST:event_tnoKeyReleased

    private void rrKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rrKeyReleased
if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
      b2.doClick();
     
   }        // TODO add your handling code here:
    }//GEN-LAST:event_rrKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BillDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BillDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BillDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BillDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BillDetails(confirmpass4).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JButton be1;
    private javax.swing.JButton be2;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox c1;
    private javax.swing.JCheckBox c2;
    private javax.swing.JCheckBox c3;
    private javax.swing.JComboBox<String> cb1;
    private javax.swing.JComboBox<String> cb2;
    private javax.swing.JComboBox<String> cb3;
    private javax.swing.JComboBox<String> cb4;
    private javax.swing.JComboBox<String> cb7;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel jl;
    private javax.swing.JTable jt1;
    private javax.swing.JLabel l01;
    private javax.swing.JLabel l11;
    private javax.swing.JLabel l12;
    private javax.swing.JLabel l13;
    private javax.swing.JLabel l21;
    private javax.swing.JLabel l31;
    private javax.swing.JLabel l99;
    private javax.swing.JLabel linfo;
    private javax.swing.JLabel lsumma;
    private javax.swing.JLabel lsumma1;
    private javax.swing.JLabel ltitle;
    private javax.swing.JLabel ltotal;
    private javax.swing.JRadioButton rb1;
    private javax.swing.JRadioButton rb2;
    private javax.swing.JTextField rr;
    private javax.swing.JLabel tablee;
    private javax.swing.JTextField tno;
    // End of variables declaration//GEN-END:variables
}
